---
name: spell and grammer check
on:
  push:
    branches:
    - "**"
  pull_request:
    paths:
      - '.github/checking.txt'
    types: [opened, edited, updated]          

env:
  SPELL_CHECK_DISABLED: false
  GRAMMAR_CHECK_DISABLED: false

jobs:
  check-spelling-and-grammar:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    # Install the dependencies for grammer check and spell check.
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install pyspelling 
        sudo apt-get install hunspell hunspell-en-us aspell aspell-en
        pip install --user --upgrade language_tool_python
      
    - uses: actions/checkout@v2
    - name: Spellcheck
      if: ${{ env.SPELL_CHECK_DISABLED == 'false' }}
      uses: rojopolis/spellcheck-github-actions@0.34.0
      with:
        config_path: .github/.spellcheck.yaml
        source_files: ".github/checking.txt"       # name of the file to check spell 
        task_name: Markdown
    # To check the grammatical mistakes of the given files and folders.
    - name: Run grammar check
      if: ${{ env.GRAMMAR_CHECK_DISABLED == 'false' }}
      run: |
        python - <<EOF
        import language_tool_python

        # Initialize LanguageTool
        tool = language_tool_python.LanguageTool('en-US')  # You can specify the language you want to check.

        # Manually disable rules
          tool.disable_rule('WHITESPACE_RULE')
          tool.disable_rule('EN_UNPAIRED_BRACKETS')
          tool.disable_rule('COMMA_PARENTHESIS_WHITESPACE')
          tool.disable_rule('UPPERCASE_SENTENCE_START')
 
        # Specify the directory path
        directory_path = 'docs'

        # Read the text from your file
        file_path = '.github/checking.txt'  # Update the path accordingly
        with open(file_path, 'r', encoding='utf-8') as file:
            text = file.read()
 
        # Check for grammar errors
        matches = tool.check(text)
 
        # Print grammar errors with line numbers
        if matches:
            for match in matches:
                print(f"Grammar error at line {match.offset} - {match.message}")
            # Exit with a non-zero code to indicate failure
            exit(1)
        else:
            # No grammar errors found, print a success message
            print("No grammar errors found.")
 
            exit(0)
        EOF
