##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.nodeName }}
  namespace: {{ .Values.metadata.namespace }}
  annotations:
  labels:
    run: {{ .Values.nodeName }}
    app.kubernetes.io/name: {{ .Values.nodeName }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  selector:
    app: {{ .Values.nodeName }}
  # we need healthCheckNodePort set to get rid of logs pollution
  {{- if (.Values.healthCheckNodePort) }}
  healthCheckNodePort: {{ .Values.healthCheckNodePort }}
  {{- end }}
  {{- if (.Values.service.type) }}
  type: {{ .Values.service.type }}
  {{- end }}
  ports:
    - port: {{ .Values.service.p2pPort }}
      targetPort: {{ .Values.service.p2pPort }}
      protocol: TCP
      name: http
    - port: {{ .Values.service.rpc.addressPort }} 
      targetPort: {{ .Values.service.rpc.addressPort }}
      protocol: TCP
      name: rpc
    - port: {{ .Values.service.sshdPort }} 
      targetPort: {{ .Values.service.sshdPort }}
      protocol: TCP
      name: ssh
{{ if $.Values.nodeConf.ambassador }}
---
apiVersion: getambassador.io/v3alpha1
kind: Listener
metadata:
  name: {{ .Values.nodeName }}-listener
  namespace: {{ .Values.metadata.namespace }}
spec:
  port: {{ .Values.nodeConf.ambassador.p2pPort }}
  protocol: TCP
  securityModel: XFP
  hostBinding:
    namespace:
      from: SELF

---
apiVersion: getambassador.io/v3alpha1
kind: TCPMapping
metadata:
  name: {{ .Values.nodeName }}-p2p
  namespace: {{ .Values.metadata.namespace }}
spec:
  port: {{ .Values.nodeConf.ambassador.p2pPort }}
  service: {{ .Values.nodeName }}.{{ .Values.metadata.namespace }}:{{ .Values.service.p2pPort }}
---
apiVersion: getambassador.io/v3alpha1
kind: TLSContext
metadata:
  name: {{ .Values.nodeName }}-context
  namespace: {{ .Values.metadata.namespace }}
spec:
  secret: {{ .Values.nodeName }}-ambassador-certs.{{ .Values.metadata.namespace }}
  secret_namespacing: true
  min_tls_version: v1.2
{{ end }}
